#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created for cs148, spring '22

@author: ghills
"""

#%%
from mpl_toolkits import mplot3d

#import matplotlib as mp
import matplotlib.pyplot as plt
import pandas as pd
#import numpy as np
import os
import math

# ==================================================
# use this to load .csv files generated by spectremdl
# --------------------------------------------------
def read_csv_graceful(fdne_csv):
    if os.path.exists(fdne_csv):
        df_csv = pd.read_csv(fdne_csv,sep=',')
    else:
        df_csv = pd.DataFrame
    return df_csv

# ==================================================
# load data
# --------------------------------------------------
df_time        = read_csv_graceful("out.time.txt")
df_net_vg      = read_csv_graceful("out.net_vg.txt")
df_net_vd      = read_csv_graceful("out.net_vd.txt")
df_net_vs      = read_csv_graceful("out.net_vs.txt")
df_I_Vd        = -read_csv_graceful("out.I_Vd.txt")

vgs = df_net_vg["net_vg"] - df_net_vs["net_vs"]
vds = df_net_vd["net_vd"] - df_net_vs["net_vs"]
I = df_I_Vd["I_Vd"]

t_us = 1e6*df_time["time"]

R = vds / df_I_Vd["I_Vd"]

Iabs = abs(df_I_Vd["I_Vd"])

# ==================================================
# plot data
# --------------------------------------------------
if ((not df_time.empty) and (not df_I_Vd.empty)):
    f=plt.figure()
    ax1 = f.add_subplot(3,1,1)
    ax2 = f.add_subplot(3,1,2)
    ax3 = f.add_subplot(3,1,3)

    ax1.plot(t_us,df_I_Vd["I_Vd"] ,'b.-',label="current")
    ax1.set_ylabel("current (A)")

    ax1.legend()

    ax2.plot(t_us,df_net_vg["net_vg"] ,'b.-',label="vg")
    ax2.plot(t_us,df_net_vd["net_vd"] ,'r.-',label="vd")
    ax2.plot(t_us,df_net_vs["net_vs"] ,'g-',label="vs")
    ax2.plot(t_us,vds ,'k-',label="vds")
    ax2.set_ylabel("voltage (volts)")
    ax2.legend()

    ax3.semilogy(t_us,R,'b.-',label="R")
    ax3.set_ylabel("resistance (Ohms)")
    ax3.set_xlabel("time (usec)")    
    ax3.legend()

    f.savefig("plotdata.I_Vd_vs_time.png")
    print("created plot: plotdata.I_Vd_vs_time")
else:
    print("could not find data")



if ((not df_time.empty) and (not df_I_Vd.empty)):
    f=plt.figure()
    ax1 = f.add_subplot(1,1,1)

    ax1.semilogy(vds,Iabs,'b.-',label="I")

    ax1.set_ylabel("current (A)")
    ax1.set_xlabel("Vds (V)")    

    f.savefig("plotdata.I_V.png")
    print("created plot: plotdata.I_V.png")
else:
    print("could not find data")



